---
import DefaultLayout from '../layouts/DefaultLayout.astro'
---

<DefaultLayout title="Frontend Mentor">
  <section class="margin-48">
    <div class="container align-center center-screen">
      <div class="screen__inner animate__animated">
        <div class="card elevation-500" aria-live="polite">
          <h1 class="size-12">Advice #<span></span></h1>
          <p class="animate__animated"></p>
          <img src="/advice-generator-app/pattern-divider-desktop.svg" alt="">
        </div>
        <button class="dice">
          <img src="/advice-generator-app/icon-dice.svg" alt="Generate random quote">
        </button>
      </div>
    </div>
  </section>
</DefaultLayout>

<script>
  const screenInner = document.querySelector('.screen__inner')
  const button = document.querySelector('.dice')
  const quoteNumber = document.querySelector('h1 span')
  const quoteText = document.querySelector('p')

  function getRandomQuote () {
    fetch('https://api.adviceslip.com/advice', { cache: 'no-store' })
      .then(response => response.json())
      .then(data => {
        quoteNumber.innerHTML = data.slip.id
        quoteText.innerText = `“${data.slip.advice}”`
      })
      .catch(error => console.log(error))
  }

  button.addEventListener('click', () => {
    screenInner.classList.add('animate__bounce')
    quoteText.classList.remove('animate__fadeIn')

    setTimeout(() => {
      getRandomQuote()
      quoteText.classList.add('animate__fadeIn')
    }, 500)

    setTimeout(() => {
      screenInner.classList.remove('animate__bounce')
    }, 1000)
  })

  getRandomQuote()
</script>

<style lang="scss">
  @use '../assets/scss/base/breakpoint' as *;
  @use '../assets/scss/base/size' as *;

  .center-screen {
    height: 70vh;

    .screen__inner {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
  }

  h1 {
    color: var(--neon-green);
    text-transform: uppercase;
    letter-spacing: 0.5ch;
    line-height: 0;
  }
  
  p {
    color: var(--light-cyan);
    @include size-20;

    @include breakpoint(medium) {
      @include size-24;
    }
  }

  .card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 3rem;
    max-width: 500px;
    min-height: 330px;
    padding: 3rem 3rem 5rem;
    background-color: var(--dark-grayish-blue);
    border-radius: 1rem;
    text-align: center;

    @include breakpoint(medium) {
      width: 540px;
    }
  }

  button.dice {
    margin-top: -2rem;
    padding: 1.25rem;
    background-color: var(--neon-green);
    border: none;
    border-radius: 100%;
    transition: box-shadow 0.3s ease-in-out, transform 0.15s ease-in-out;

    &:hover {
      box-shadow: 0 0 1.5rem var(--neon-green);
      transform: scale(1.4);

      img {
        animation: spin-around 0.5s forwards;
      }
    }
  }

  @keyframes spin-around {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
</style>
